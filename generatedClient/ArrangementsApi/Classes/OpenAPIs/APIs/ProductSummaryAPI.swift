//
// ProductSummaryAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Backbase
import ClientCommonGen2

/// ProductSummaryAPI protocol defines a blueprint of methods, properties, and other requirements for ProductSummaryAPI functionality. 
public protocol ProductSummaryAPIProtocol {

    /**
     - GET /client-api/v2/productsummary/context/arrangements
     - Get a list of arrangements according to a given business functions
     - parameter businessFunction: (query) Provide comma separated contexts for retrieving arrangements 
     - parameter resourceName: (query) Provide the resource for retrieving arrangements 
     - parameter privilege: (query) Privilege for the arrangements 
     - parameter contentLanguage: (header) Defines the translation natural language as specified in ISO 639-1, and territory two-letter form of ISO 3166. (optional)
     - parameter withLatestBalances: (query) Retrieve a list of arrangements with the latest balances (optional, default to true)
     - parameter maskIndicator: (query) Masked/Unmasked card number (optional)
     - parameter debitAccount: (query) Type of account (optional)
     - parameter creditAccount: (query) Type of account (optional)
     - parameter externalTransferAllowed: (query) Privilege for external transfers (optional)
     - parameter productKindName: (query) Product Kind Name (optional)
     - parameter legalEntityIds: (query) A list of legal entities ids to filter by (optional)
     - parameter sourceId: (query) No description available (optional)
     - parameter favorite: (query) Indicates whether an arrangement is favorite for a user or not (optional)
     - parameter searchTerm: (query) Full text search (optional)
     - parameter customOrder: (query) Parameter that identifies weather the returned list should be ordered by custom order/grouping (optional)
     - parameter favoriteFirst: (query) Parameter that sets favorite arrangements on top when true (optional, default to false)
     - parameter subscriptions: (query) A list of subscription identifiers (optional)
     - parameter hasParent: (query) Parameter that filters out arrangements where parentId is not null (optional)
     - parameter from: (query) Page Number. Skip over pages of elements by specifying a start value for the query (optional, default to 0)
     - parameter size: (query) Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  (optional, default to 10)
     - parameter cursor: (query) Record UUID. As an alternative for specifying &#39;from&#39; this allows to point to the record to start the selection from.  (optional, default to "")
     - parameter orderBy: (query) Order by field (optional)
     - parameter direction: (query) Direction (optional)
     - parameter ignoredProductKindNames: (query) Product kind names to be ignored (optional)
     - parameter productKindNames: (query) Product kind names to be considered in the query (optional)
     - returns: Call<[ProductSummaryItem]> 
     */
    @available(*, deprecated, message: "This method is deprecated in favor of the alternative method with ProductSummaryAPI.GetArrangementsByBusinessFunctionRequestParams class.")
    func getArrangementsByBusinessFunctionCall(businessFunction: String, resourceName: String, privilege: String, contentLanguage: String?, withLatestBalances: Bool?, maskIndicator: Bool?, debitAccount: Bool?, creditAccount: Bool?, externalTransferAllowed: Bool?, productKindName: String?, legalEntityIds: [String]?, sourceId: String?, favorite: Bool?, searchTerm: String?, customOrder: Bool?, favoriteFirst: Bool?, subscriptions: [String]?, hasParent: Bool?, from: Int?, size: Int?, cursor: String?, orderBy: [OrderByField]?, direction: SortDirection?, ignoredProductKindNames: [String]?, productKindNames: [String]?) throws -> Call<[ProductSummaryItem]>
    
    /**
     - GET /client-api/v2/productsummary/context/arrangements
     - Get a list of arrangements according to a given business functions

     - parameter params: The request parameters of this request.
     - returns: Call<[ProductSummaryItem]> 
     */
    func getArrangementsByBusinessFunctionCall(params: ProductSummaryAPI.GetArrangementsByBusinessFunctionRequestParams) throws -> Call<[ProductSummaryItem]>

    /**
     - GET /client-api/v2/productsummary
     - Retrieve list of products summaries.
     - responseHeaders: [x-total-count(Int)]
     - parameter contentLanguage: (header) Defines the translation natural language as specified in ISO 639-1, and territory two-letter form of ISO 3166. (optional)
     - parameter debitAccount: (query) Type of account (optional)
     - parameter creditAccount: (query) Type of account (optional)
     - parameter maskIndicator: (query) Masked/Unmasked card number (optional)
     - parameter ignoredProductKindNames: (query) Product kind names to be ignored (optional)
     - parameter businessFunction: (query) Select arrangements current user has permission to perform this business function. (optional)
     - parameter resourceName: (query) In combination with businessFunction parameter, defines the resource. (optional)
     - parameter privilege: (query) In combination with businessFunction parameter, defines the privilege. (optional)
     - returns: Call<ProductSummary> 
     */
    @available(*, deprecated, message: "This method is deprecated in favor of the alternative method with ProductSummaryAPI.GetProductSummaryRequestParams class.")
    func getProductSummaryCall(contentLanguage: String?, debitAccount: Bool?, creditAccount: Bool?, maskIndicator: Bool?, ignoredProductKindNames: [String]?, businessFunction: String?, resourceName: String?, privilege: String?) throws -> Call<ProductSummary>
    
    /**
     - GET /client-api/v2/productsummary
     - Retrieve list of products summaries.
     - responseHeaders: [x-total-count(Int)]

     - parameter params: The request parameters of this request.
     - returns: Call<ProductSummary> 
     */
    func getProductSummaryCall(params: ProductSummaryAPI.GetProductSummaryRequestParams) throws -> Call<ProductSummary>

    /**
     - GET /client-api/v2/productsummary/configuration
     - Retrieve list of products summaries, flat structure. Use POST /client-api/v2/productsummary/configuration/filter instead. Always returns null for the userPreferences field. 
     - responseHeaders: [x-total-count(Int)]
     - parameter legalEntityIds: (query) legal entity ids 
     - parameter arrangementIds: (query) arrangement ids (optional)
     - parameter ignoredArrangementIds: (query) No description available (optional)
     - parameter searchTerm: (query) Full text search (optional)
     - parameter from: (query) Page Number. Skip over pages of elements by specifying a start value for the query (optional, default to 0)
     - parameter size: (query) Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  (optional, default to 10)
     - parameter cursor: (query) Record UUID. As an alternative for specifying &#39;from&#39; this allows to point to the record to start the selection from.  (optional, default to "")
     - parameter orderBy: (query) Order by field (optional)
     - parameter direction: (query) Direction (optional)
     - returns: Call<[ProductSummaryItem]> 
     */
    @available(*, deprecated, message: "This method is deprecated in favor of the alternative method with ProductSummaryAPI.GetProductSummaryEntitlementsByLegalEntityIdRequestParams class.")
    func getProductSummaryEntitlementsByLegalEntityIdCall(legalEntityIds: [String], arrangementIds: [String]?, ignoredArrangementIds: [String]?, searchTerm: String?, from: Int?, size: Int?, cursor: String?, orderBy: [OrderByField]?, direction: SortDirection?) throws -> Call<[ProductSummaryItem]>
    
    /**
     - GET /client-api/v2/productsummary/configuration
     - Retrieve list of products summaries, flat structure. Use POST /client-api/v2/productsummary/configuration/filter instead. Always returns null for the userPreferences field. 
     - responseHeaders: [x-total-count(Int)]

     - parameter params: The request parameters of this request.
     - returns: Call<[ProductSummaryItem]> 
     */
     @available(*, deprecated)
    func getProductSummaryEntitlementsByLegalEntityIdCall(params: ProductSummaryAPI.GetProductSummaryEntitlementsByLegalEntityIdRequestParams) throws -> Call<[ProductSummaryItem]>

    /**
     - POST /client-api/v2/productsummary/configuration/filter
     - Filter products summaries.
     - parameter productSummaryFilterParams: (body)  
     - returns: Call<ProductSummaryFilterResult> 
     */
    @available(*, deprecated, message: "This method is deprecated in favor of the alternative method with ProductSummaryAPI.PostFilterProductSummariesRequestParams class.")
    func postFilterProductSummariesCall(productSummaryFilterParams: ProductSummaryFilterParams) throws -> Call<ProductSummaryFilterResult>
    
    /**
     - POST /client-api/v2/productsummary/configuration/filter
     - Filter products summaries.

     - parameter params: The request parameters of this request.
     - returns: Call<ProductSummaryFilterResult> 
     */
    func postFilterProductSummariesCall(params: ProductSummaryAPI.PostFilterProductSummariesRequestParams) throws -> Call<ProductSummaryFilterResult>
}


public class ProductSummaryAPI: NSObject, DBSClient, ProductSummaryAPIProtocol {
    public var dataProvider: DBSDataProvider?
    public var baseURL: URL

    public override init() {
        self.baseURL = URL(fileURLWithPath: "")
    }

    required public init(dataProvider: DBSDataProvider, baseURL: URL) {
        self.dataProvider = dataProvider
        self.baseURL = baseURL
    }
    /**
     - GET /client-api/v2/productsummary/context/arrangements
     - Get a list of arrangements according to a given business functions
     - parameter businessFunction: (query) Provide comma separated contexts for retrieving arrangements 
     - parameter resourceName: (query) Provide the resource for retrieving arrangements 
     - parameter privilege: (query) Privilege for the arrangements 
     - parameter contentLanguage: (header) Defines the translation natural language as specified in ISO 639-1, and territory two-letter form of ISO 3166. (optional)
     - parameter withLatestBalances: (query) Retrieve a list of arrangements with the latest balances (optional, default to true)
     - parameter maskIndicator: (query) Masked/Unmasked card number (optional)
     - parameter debitAccount: (query) Type of account (optional)
     - parameter creditAccount: (query) Type of account (optional)
     - parameter externalTransferAllowed: (query) Privilege for external transfers (optional)
     - parameter productKindName: (query) Product Kind Name (optional)
     - parameter legalEntityIds: (query) A list of legal entities ids to filter by (optional)
     - parameter sourceId: (query) No description available (optional)
     - parameter favorite: (query) Indicates whether an arrangement is favorite for a user or not (optional)
     - parameter searchTerm: (query) Full text search (optional)
     - parameter customOrder: (query) Parameter that identifies weather the returned list should be ordered by custom order/grouping (optional)
     - parameter favoriteFirst: (query) Parameter that sets favorite arrangements on top when true (optional, default to false)
     - parameter subscriptions: (query) A list of subscription identifiers (optional)
     - parameter hasParent: (query) Parameter that filters out arrangements where parentId is not null (optional)
     - parameter from: (query) Page Number. Skip over pages of elements by specifying a start value for the query (optional, default to 0)
     - parameter size: (query) Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  (optional, default to 10)
     - parameter cursor: (query) Record UUID. As an alternative for specifying &#39;from&#39; this allows to point to the record to start the selection from.  (optional, default to "")
     - parameter orderBy: (query) Order by field (optional)
     - parameter direction: (query) Direction (optional)
     - parameter ignoredProductKindNames: (query) Product kind names to be ignored (optional)
     - parameter productKindNames: (query) Product kind names to be considered in the query (optional)
     - returns: Call<[ProductSummaryItem]> 
     */
     @available(*, deprecated, message: "This method is deprecated in favor of the alternative method with ProductSummaryAPI.GetArrangementsByBusinessFunctionRequestParams class.")
    open func getArrangementsByBusinessFunctionCall(businessFunction: String, resourceName: String, privilege: String, contentLanguage: String? = nil, withLatestBalances: Bool? = nil, maskIndicator: Bool? = nil, debitAccount: Bool? = nil, creditAccount: Bool? = nil, externalTransferAllowed: Bool? = nil, productKindName: String? = nil, legalEntityIds: [String]? = nil, sourceId: String? = nil, favorite: Bool? = nil, searchTerm: String? = nil, customOrder: Bool? = nil, favoriteFirst: Bool? = nil, subscriptions: [String]? = nil, hasParent: Bool? = nil, from: Int? = nil, size: Int? = nil, cursor: String? = nil, orderBy: [OrderByField]? = nil, direction: SortDirection? = nil, ignoredProductKindNames: [String]? = nil, productKindNames: [String]? = nil) throws -> Call<[ProductSummaryItem]> {
        guard let dataProvider = dataProvider else { throw CallError.missingDataProvider }
        let path = "/client-api/v2/productsummary/context/arrangements"
        
        let parameters: [String: Any]? = nil
        
        let queryParameters: [String: Any?] = [
            "withLatestBalances":withLatestBalances?.encodeToJSON(), 
            "maskIndicator":maskIndicator?.encodeToJSON(), 
            "debitAccount":debitAccount?.encodeToJSON(), 
            "creditAccount":creditAccount?.encodeToJSON(), 
            "businessFunction":businessFunction.encodeToJSON(), 
            "resourceName":resourceName.encodeToJSON(), 
            "privilege":privilege.encodeToJSON(), 
            "externalTransferAllowed":externalTransferAllowed?.encodeToJSON(), 
            "productKindName":productKindName?.encodeToJSON(), 
            "legalEntityIds":legalEntityIds?.encodeToJSON(), 
            "sourceId":sourceId?.encodeToJSON(), 
            "favorite":favorite?.encodeToJSON(), 
            "searchTerm":searchTerm?.encodeToJSON(), 
            "customOrder":customOrder?.encodeToJSON(), 
            "favoriteFirst":favoriteFirst?.encodeToJSON(), 
            "subscriptions":subscriptions?.encodeToJSON(), 
            "hasParent":hasParent?.encodeToJSON(), 
            "from":from?.encodeToJSON(), 
            "size":size?.encodeToJSON(), 
            "cursor":cursor?.encodeToJSON(), 
            "orderBy":orderBy?.encodeToJSON(), 
            "direction":direction?.encodeToJSON(), 
            "ignoredProductKindNames":ignoredProductKindNames?.encodeToJSON(), 
            "productKindNames":productKindNames?.encodeToJSON()
        ]
        let urlComponents = URLComponents(url: baseURL.appendingPathComponent(path), resolvingAgainstBaseURL: false)
        let nillableHeaders: [String: Any?] = [
            "Content-Language":contentLanguage?.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
        guard let url = urlComponents?.url else { throw CallError.invalidUrl }
        let request = try ClientCommonGen2.RequestBuilder.createURLRequest(requestUrl: url, 
                                                                            method: "GET",
                                                                            queryParameters: queryParameters.compactMapValues({ $0 }),
                                                                            bodyParameters: parameters,
                                                                            bodyType: .none,
                                                                            headers: headerParameters)
        return Call<[ProductSummaryItem]>(dataProvider: dataProvider, request: request)
    }

    /**
     - GET /client-api/v2/productsummary/context/arrangements
     - Get a list of arrangements according to a given business functions

     - parameter params: The request parameters of this request.
     - returns: Call<[ProductSummaryItem]> 
     */
    open func getArrangementsByBusinessFunctionCall(params: ProductSummaryAPI.GetArrangementsByBusinessFunctionRequestParams) throws -> Call<[ProductSummaryItem]> {
        guard let dataProvider = dataProvider else { throw CallError.missingDataProvider }
        let path = "/client-api/v2/productsummary/context/arrangements"
        
        let parameters: [String: Any]? = nil
        
        let queryParameters: [String: Any?] = [
            "withLatestBalances": params.withLatestBalances?.encodeToJSON(), 
            "maskIndicator": params.maskIndicator?.encodeToJSON(), 
            "debitAccount": params.debitAccount?.encodeToJSON(), 
            "creditAccount": params.creditAccount?.encodeToJSON(), 
            "businessFunction": params.businessFunction.encodeToJSON(), 
            "resourceName": params.resourceName.encodeToJSON(), 
            "privilege": params.privilege.encodeToJSON(), 
            "externalTransferAllowed": params.externalTransferAllowed?.encodeToJSON(), 
            "productKindName": params.productKindName?.encodeToJSON(), 
            "legalEntityIds": params.legalEntityIds?.encodeToJSON(), 
            "sourceId": params.sourceId?.encodeToJSON(), 
            "favorite": params.favorite?.encodeToJSON(), 
            "searchTerm": params.searchTerm?.encodeToJSON(), 
            "customOrder": params.customOrder?.encodeToJSON(), 
            "favoriteFirst": params.favoriteFirst?.encodeToJSON(), 
            "subscriptions": params.subscriptions?.encodeToJSON(), 
            "hasParent": params.hasParent?.encodeToJSON(), 
            "from": params.from?.encodeToJSON(), 
            "size": params.size?.encodeToJSON(), 
            "cursor": params.cursor?.encodeToJSON(), 
            "orderBy": params.orderBy?.encodeToJSON(), 
            "direction": params.direction?.encodeToJSON(), 
            "ignoredProductKindNames": params.ignoredProductKindNames?.encodeToJSON(), 
            "productKindNames": params.productKindNames?.encodeToJSON()
        ]
        let urlComponents = URLComponents(url: baseURL.appendingPathComponent(path), resolvingAgainstBaseURL: false)
        let nillableHeaders: [String: Any?] = [
            "Content-Language": params.contentLanguage?.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
        guard let url = urlComponents?.url else { throw CallError.invalidUrl }
        let request = try ClientCommonGen2.RequestBuilder.createURLRequest(requestUrl: url, 
                                                                            method: "GET",
                                                                            queryParameters: queryParameters.compactMapValues({ $0 }),
                                                                            bodyParameters: parameters,
                                                                            bodyType: .none,
                                                                            headers: headerParameters)
        return Call<[ProductSummaryItem]>(dataProvider: dataProvider, request: request)
    }
    /**
     - GET /client-api/v2/productsummary
     - Retrieve list of products summaries.
     - responseHeaders: [x-total-count(Int)]
     - parameter contentLanguage: (header) Defines the translation natural language as specified in ISO 639-1, and territory two-letter form of ISO 3166. (optional)
     - parameter debitAccount: (query) Type of account (optional)
     - parameter creditAccount: (query) Type of account (optional)
     - parameter maskIndicator: (query) Masked/Unmasked card number (optional)
     - parameter ignoredProductKindNames: (query) Product kind names to be ignored (optional)
     - parameter businessFunction: (query) Select arrangements current user has permission to perform this business function. (optional)
     - parameter resourceName: (query) In combination with businessFunction parameter, defines the resource. (optional)
     - parameter privilege: (query) In combination with businessFunction parameter, defines the privilege. (optional)
     - returns: Call<ProductSummary> 
     */
     @available(*, deprecated, message: "This method is deprecated in favor of the alternative method with ProductSummaryAPI.GetProductSummaryRequestParams class.")
    open func getProductSummaryCall(contentLanguage: String? = nil, debitAccount: Bool? = nil, creditAccount: Bool? = nil, maskIndicator: Bool? = nil, ignoredProductKindNames: [String]? = nil, businessFunction: String? = nil, resourceName: String? = nil, privilege: String? = nil) throws -> Call<ProductSummary> {
        guard let dataProvider = dataProvider else { throw CallError.missingDataProvider }
        let path = "/client-api/v2/productsummary"
        
        let parameters: [String: Any]? = nil
        
        let queryParameters: [String: Any?] = [
            "debitAccount":debitAccount?.encodeToJSON(), 
            "creditAccount":creditAccount?.encodeToJSON(), 
            "maskIndicator":maskIndicator?.encodeToJSON(), 
            "ignoredProductKindNames":ignoredProductKindNames?.encodeToJSON(), 
            "businessFunction":businessFunction?.encodeToJSON(), 
            "resourceName":resourceName?.encodeToJSON(), 
            "privilege":privilege?.encodeToJSON()
        ]
        let urlComponents = URLComponents(url: baseURL.appendingPathComponent(path), resolvingAgainstBaseURL: false)
        let nillableHeaders: [String: Any?] = [
            "Content-Language":contentLanguage?.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
        guard let url = urlComponents?.url else { throw CallError.invalidUrl }
        let request = try ClientCommonGen2.RequestBuilder.createURLRequest(requestUrl: url, 
                                                                            method: "GET",
                                                                            queryParameters: queryParameters.compactMapValues({ $0 }),
                                                                            bodyParameters: parameters,
                                                                            bodyType: .none,
                                                                            headers: headerParameters)
        return Call<ProductSummary>(dataProvider: dataProvider, request: request)
    }

    /**
     - GET /client-api/v2/productsummary
     - Retrieve list of products summaries.
     - responseHeaders: [x-total-count(Int)]

     - parameter params: The request parameters of this request.
     - returns: Call<ProductSummary> 
     */
    open func getProductSummaryCall(params: ProductSummaryAPI.GetProductSummaryRequestParams) throws -> Call<ProductSummary> {
        guard let dataProvider = dataProvider else { throw CallError.missingDataProvider }
        let path = "/client-api/v2/productsummary"
        
        let parameters: [String: Any]? = nil
        
        let queryParameters: [String: Any?] = [
            "debitAccount": params.debitAccount?.encodeToJSON(), 
            "creditAccount": params.creditAccount?.encodeToJSON(), 
            "maskIndicator": params.maskIndicator?.encodeToJSON(), 
            "ignoredProductKindNames": params.ignoredProductKindNames?.encodeToJSON(), 
            "businessFunction": params.businessFunction?.encodeToJSON(), 
            "resourceName": params.resourceName?.encodeToJSON(), 
            "privilege": params.privilege?.encodeToJSON()
        ]
        let urlComponents = URLComponents(url: baseURL.appendingPathComponent(path), resolvingAgainstBaseURL: false)
        let nillableHeaders: [String: Any?] = [
            "Content-Language": params.contentLanguage?.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
        guard let url = urlComponents?.url else { throw CallError.invalidUrl }
        let request = try ClientCommonGen2.RequestBuilder.createURLRequest(requestUrl: url, 
                                                                            method: "GET",
                                                                            queryParameters: queryParameters.compactMapValues({ $0 }),
                                                                            bodyParameters: parameters,
                                                                            bodyType: .none,
                                                                            headers: headerParameters)
        return Call<ProductSummary>(dataProvider: dataProvider, request: request)
    }
    /**
     - GET /client-api/v2/productsummary/configuration
     - Retrieve list of products summaries, flat structure. Use POST /client-api/v2/productsummary/configuration/filter instead. Always returns null for the userPreferences field. 
     - responseHeaders: [x-total-count(Int)]
     - parameter legalEntityIds: (query) legal entity ids 
     - parameter arrangementIds: (query) arrangement ids (optional)
     - parameter ignoredArrangementIds: (query) No description available (optional)
     - parameter searchTerm: (query) Full text search (optional)
     - parameter from: (query) Page Number. Skip over pages of elements by specifying a start value for the query (optional, default to 0)
     - parameter size: (query) Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  (optional, default to 10)
     - parameter cursor: (query) Record UUID. As an alternative for specifying &#39;from&#39; this allows to point to the record to start the selection from.  (optional, default to "")
     - parameter orderBy: (query) Order by field (optional)
     - parameter direction: (query) Direction (optional)
     - returns: Call<[ProductSummaryItem]> 
     */
     @available(*, deprecated, message: "This method is deprecated in favor of the alternative method with ProductSummaryAPI.GetProductSummaryEntitlementsByLegalEntityIdRequestParams class.")
    open func getProductSummaryEntitlementsByLegalEntityIdCall(legalEntityIds: [String], arrangementIds: [String]? = nil, ignoredArrangementIds: [String]? = nil, searchTerm: String? = nil, from: Int? = nil, size: Int? = nil, cursor: String? = nil, orderBy: [OrderByField]? = nil, direction: SortDirection? = nil) throws -> Call<[ProductSummaryItem]> {
        guard let dataProvider = dataProvider else { throw CallError.missingDataProvider }
        let path = "/client-api/v2/productsummary/configuration"
        
        let parameters: [String: Any]? = nil
        
        let queryParameters: [String: Any?] = [
            "arrangementIds":arrangementIds?.encodeToJSON(), 
            "ignoredArrangementIds":ignoredArrangementIds?.encodeToJSON(), 
            "legalEntityIds":legalEntityIds.encodeToJSON(), 
            "searchTerm":searchTerm?.encodeToJSON(), 
            "from":from?.encodeToJSON(), 
            "size":size?.encodeToJSON(), 
            "cursor":cursor?.encodeToJSON(), 
            "orderBy":orderBy?.encodeToJSON(), 
            "direction":direction?.encodeToJSON()
        ]
        let urlComponents = URLComponents(url: baseURL.appendingPathComponent(path), resolvingAgainstBaseURL: false)
        guard let url = urlComponents?.url else { throw CallError.invalidUrl }
        let request = try ClientCommonGen2.RequestBuilder.createURLRequest(requestUrl: url, 
                                                                            method: "GET",
                                                                            queryParameters: queryParameters.compactMapValues({ $0 }),
                                                                            bodyParameters: parameters,
                                                                            bodyType: .none)
        return Call<[ProductSummaryItem]>(dataProvider: dataProvider, request: request)
    }

    /**
     - GET /client-api/v2/productsummary/configuration
     - Retrieve list of products summaries, flat structure. Use POST /client-api/v2/productsummary/configuration/filter instead. Always returns null for the userPreferences field. 
     - responseHeaders: [x-total-count(Int)]

     - parameter params: The request parameters of this request.
     - returns: Call<[ProductSummaryItem]> 
     */
     @available(*, deprecated)
    open func getProductSummaryEntitlementsByLegalEntityIdCall(params: ProductSummaryAPI.GetProductSummaryEntitlementsByLegalEntityIdRequestParams) throws -> Call<[ProductSummaryItem]> {
        guard let dataProvider = dataProvider else { throw CallError.missingDataProvider }
        let path = "/client-api/v2/productsummary/configuration"
        
        let parameters: [String: Any]? = nil
        
        let queryParameters: [String: Any?] = [
            "arrangementIds": params.arrangementIds?.encodeToJSON(), 
            "ignoredArrangementIds": params.ignoredArrangementIds?.encodeToJSON(), 
            "legalEntityIds": params.legalEntityIds.encodeToJSON(), 
            "searchTerm": params.searchTerm?.encodeToJSON(), 
            "from": params.from?.encodeToJSON(), 
            "size": params.size?.encodeToJSON(), 
            "cursor": params.cursor?.encodeToJSON(), 
            "orderBy": params.orderBy?.encodeToJSON(), 
            "direction": params.direction?.encodeToJSON()
        ]
        let urlComponents = URLComponents(url: baseURL.appendingPathComponent(path), resolvingAgainstBaseURL: false)
        guard let url = urlComponents?.url else { throw CallError.invalidUrl }
        let request = try ClientCommonGen2.RequestBuilder.createURLRequest(requestUrl: url, 
                                                                            method: "GET",
                                                                            queryParameters: queryParameters.compactMapValues({ $0 }),
                                                                            bodyParameters: parameters,
                                                                            bodyType: .none)
        return Call<[ProductSummaryItem]>(dataProvider: dataProvider, request: request)
    }
    /**
     - POST /client-api/v2/productsummary/configuration/filter
     - Filter products summaries.
     - parameter productSummaryFilterParams: (body)  
     - returns: Call<ProductSummaryFilterResult> 
     */
     @available(*, deprecated, message: "This method is deprecated in favor of the alternative method with ProductSummaryAPI.PostFilterProductSummariesRequestParams class.")
    open func postFilterProductSummariesCall(productSummaryFilterParams: ProductSummaryFilterParams) throws -> Call<ProductSummaryFilterResult> {
        guard let dataProvider = dataProvider else { throw CallError.missingDataProvider }
        let path = "/client-api/v2/productsummary/configuration/filter"
        
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: productSummaryFilterParams)

        let urlComponents = URLComponents(url: baseURL.appendingPathComponent(path), resolvingAgainstBaseURL: false)
        guard let url = urlComponents?.url else { throw CallError.invalidUrl }
        let request = try ClientCommonGen2.RequestBuilder.createURLRequest(requestUrl: url, 
                                                                            method: "POST",
                                                                            queryParameters: nil,
                                                                            bodyParameters: parameters,
                                                                            bodyType: .json)
        return Call<ProductSummaryFilterResult>(dataProvider: dataProvider, request: request)
    }

    /**
     - POST /client-api/v2/productsummary/configuration/filter
     - Filter products summaries.

     - parameter params: The request parameters of this request.
     - returns: Call<ProductSummaryFilterResult> 
     */
    open func postFilterProductSummariesCall(params: ProductSummaryAPI.PostFilterProductSummariesRequestParams) throws -> Call<ProductSummaryFilterResult> {
        guard let dataProvider = dataProvider else { throw CallError.missingDataProvider }
        let path = "/client-api/v2/productsummary/configuration/filter"
        
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: params.productSummaryFilterParams)

        let urlComponents = URLComponents(url: baseURL.appendingPathComponent(path), resolvingAgainstBaseURL: false)
        guard let url = urlComponents?.url else { throw CallError.invalidUrl }
        let request = try ClientCommonGen2.RequestBuilder.createURLRequest(requestUrl: url, 
                                                                            method: "POST",
                                                                            queryParameters: nil,
                                                                            bodyParameters: parameters,
                                                                            bodyType: .json)
        return Call<ProductSummaryFilterResult>(dataProvider: dataProvider, request: request)
    }
}
